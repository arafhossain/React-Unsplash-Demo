{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","small","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","ReactDOM","render","document","querySelector"],"mappings":"yQAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFCiBRC,E,2MAnBXC,MAAQ,CAAEC,KAAM,I,EAChBC,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,wEAEzB,IAAD,OACL,OACI,yBAAKM,UAAU,cACX,0BAAMA,UAAU,UAAUD,SAAUE,KAAKN,cACrC,yBAAKK,UAAU,SACX,+CACA,2BAAOE,KAAK,OAAOC,MAAOF,KAAKR,MAAMC,KAAMU,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,kB,GAZzFK,IAAMC,WCyBfC,E,YAxBX,WAAYZ,GAAQ,IAAD,8BACf,4CAAMA,KAQVa,SAAW,WACP,IAAIC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IAC/B,EAAKN,SAAS,CAACU,WAVf,EAAKvB,MAAQ,CAACuB,MAAO,GACrB,EAAKH,SAAWL,IAAMW,YAHP,E,iFAMflB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,+BAQ9C,IAAD,EACqBV,KAAKH,MAAMuB,MAAhCC,EADA,EACAA,YAAaC,EADb,EACaA,KAClB,OACI,yBAAKC,MAAO,CAACC,WAAW,QAAD,OAAUxB,KAAKR,MAAMuB,SACxC,yBAAKU,IAAKzB,KAAKY,SAAUc,IAAKL,EAAaM,IAAKL,EAAKM,a,GAnB7CrB,IAAMC,WCSfqB,G,MAPC,SAAChC,GACb,IAAIiC,EAASjC,EAAMiC,OAAOC,IAAI,SAACX,GAC3B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,MAE5C,OAAO,yBAAKrB,UAAU,cAAc+B,KCgBzBI,E,2MAlBX1C,MAAQ,CAACsC,OAAQ,I,EAChBK,e,sCAAiB,WAAO1C,GAAP,eAAA2C,EAAA,qEACOC,EAASC,IAAI,yCAA0C,CACxEC,OAAQ,CAAEC,MAAO/C,KAFP,OACVgD,EADU,OAId,EAAKpC,SAAS,CAACyB,OAAQW,EAASC,KAAKC,UAJvB,yC,8HAQd,OACI,yBAAK5C,UAAU,gBACX,kBAAC,EAAD,CAAWD,SAAUE,KAAKmC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQ9B,KAAKR,MAAMsC,c,GAb5BvB,IAAMC,WCDxBoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.732a4255.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID af704aef45d9d5bf11ac281a5a7437fa259d7361411d4f4f0fca68d9b94326b1'\n    }\n});","import React from 'react';\n\nclass SearchBar extends React.Component {\n    state = { term: '' }\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSubmit(this.state.term);\n    }\n    render() {\n        return (\n            <div className=\"ui segment\">\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n                    <div className=\"field\">\n                        <label>Image Search</label>\n                        <input type=\"text\" value={this.state.term} onChange={e => this.setState({ term: e.target.value })} />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {spans: 0}\n        this.imageRef = React.createRef();\n    }\n    componentDidMount(){\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        let height = this.imageRef.current.clientHeight;\n        let spans = Math.ceil(height / 10);\n        this.setState({spans});\n    }\n    render() {\n        let {description, urls} = this.props.image;\n        return (\n            <div style={{gridRowEnd: `span ${this.state.spans}` }}>\n                <img ref={this.imageRef} alt={description} src={urls.small} />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;","import React from 'react';\nimport ImageCard from './ImageCard';\nimport './ImageList.css';\n\nlet ImageList = (props) => {\n    let images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image}/>\n    });\n    return <div className=\"image-list\">{images}</div>;\n};\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\nclass App extends React.Component {\n    state = {images: [ ]}\n     onSearchSubmit = async (term) => {\n        let response = await unsplash.get('https://api.unsplash.com/search/photos', {\n            params: { query: term }\n        })\n        this.setState({images: response.data.results})\n    }\n\n    render() {\n        return (\n            <div className=\"ui container\">\n                <SearchBar onSubmit={this.onSearchSubmit}/>\n                <ImageList images={this.state.images}/>\n            </div>\n        );\n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}