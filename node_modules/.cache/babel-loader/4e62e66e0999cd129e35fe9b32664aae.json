{"ast":null,"code":"var _jsxFileName = \"/Users/newuser/Documents/GitHub/pics/src/components/ImageCard.js\";\nimport React from 'react';\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSpans = () => {\n      let height = this.imageRef.current.clientHeight;\n      let spans = Math.ceil(height / 10);\n      this.setState({\n        spans\n      });\n    };\n\n    this.state = {\n      spans: 0\n    };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  render() {\n    let _this$props$image = this.props.image,\n        description = _this$props$image.description,\n        urls = _this$props$image.urls;\n    return React.createElement(\"div\", {\n      style: {\n        gridRowEnd: \"span \".concat(this.state.spans)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      ref: this.imageRef,\n      alt: description,\n      src: urls.small,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ImageCard;","map":{"version":3,"sources":["/Users/newuser/Documents/GitHub/pics/src/components/ImageCard.js"],"names":["React","ImageCard","Component","constructor","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","componentDidMount","addEventListener","render","image","description","urls","gridRowEnd","small"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,QATmB,GASR,MAAM;AACb,UAAIC,MAAM,GAAG,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAAnC;AACA,UAAIC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,EAAnB,CAAZ;AACA,WAAKO,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACH,KAbkB;;AAEf,SAAKI,KAAL,GAAa;AAACJ,MAAAA,KAAK,EAAE;AAAR,KAAb;AACA,SAAKH,QAAL,GAAgBP,KAAK,CAACe,SAAN,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKT,QAAL,CAAcC,OAAd,CAAsBS,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKZ,QAApD;AACH;;AAODa,EAAAA,MAAM,GAAG;AAAA,4BACqB,KAAKd,KAAL,CAAWe,KADhC;AAAA,QACAC,WADA,qBACAA,WADA;AAAA,QACaC,IADb,qBACaA,IADb;AAEL,WACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,iBAAU,KAAKR,KAAL,CAAWJ,KAArB;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKH,QAAf;AAAyB,MAAA,GAAG,EAAEa,WAA9B;AAA2C,MAAA,GAAG,EAAEC,IAAI,CAACE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAtBmC;;AAyBxC,eAAetB,SAAf","sourcesContent":["import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {spans: 0}\n        this.imageRef = React.createRef();\n    }\n    componentDidMount(){\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        let height = this.imageRef.current.clientHeight;\n        let spans = Math.ceil(height / 10);\n        this.setState({spans});\n    }\n    render() {\n        let {description, urls} = this.props.image;\n        return (\n            <div style={{gridRowEnd: `span ${this.state.spans}` }}>\n                <img ref={this.imageRef} alt={description} src={urls.small} />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;"]},"metadata":{},"sourceType":"module"}